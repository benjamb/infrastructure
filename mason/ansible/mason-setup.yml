---
- hosts: localhost
  vars_files:
  - "/etc/mason/mason.conf"
  tasks:

  - fail: msg='TROVE_ID is mandatory'
    when: TROVE_ID is not defined

  - fail: msg='TROVE_HOST is mandatory'
    when: TROVE_HOST is not defined

  - fail: msg='ARTIFACT_CACHE_SERVER is mandatory'
    when: ARTIFACT_CACHE_SERVER is not defined

  # Gerrit settings.
  #
  # These are mandatory, Zuul currently cannot be used without Gerrit.

  - fail: msg='GERRIT_USER is mandatory'
    when: GERRIT_USER is not defined

  - fail: msg='GERRIT_HOSTNAME is mandatory'
    when: GERRIT_HOSTNAME is not defined

  - set_fact: GERRIT_HTTP_PORT=80
    when: GERRIT_HTTP_PORT is not defined

  - set_fact: GERRIT_GIT_PORT=29418
    when: GERRIT_GIT_PORT is not defined

  - fail: msg='GERRIT_SSH_KEY_PATH is mandatory'
    when: GERRIT_SSH_KEY_PATH is not defined

  # Gearman settings: overriding these is possible in case the user wants to
  # integrate this Mason with an external Gearman server, but I'm not sure why
  # you'd want to do that right now.

  - set_fact: GEARMAN_HOST=localhost
    when: GEARMAN_HOST is not defined

  - set_fact: GEARMAN_PORT=4730
    when: GEARMAN_PORT is not defined

  - set_fact: START_GEARMAN=yes
    when: START_GEARMAN is not defined

  # Mason-specific settings
  #
  # These describe which Baserock systems to build and test, how to test them,
  # and what to do with the resulting artifacts.

  - fail: msg='MASON_CLUSTER_MORPHOLOGY is mandatory'
    when: MASON_CLUSTER_MORPHOLOGY is not defined

  - fail: msg='MASON_ARCHITECTURE is mandatory'
    when: MASON_ARCHITECTURE is not defined

  - fail: msg='MASON_DISTBUILD_CONTROLLERS is mandatory'
    when: MASON_DISTBUILD_CONTROLLERS is not defined

  - set_fact: MASON_TEST_INFRASTRUCTURE_TYPE=none
    when: MASON_TEST_INFRASTRUCTURE_TYPE is not defined

  - fail: msg='MASON_TEST_HOSTS is mandatory when MASON_TEST_INFRASTRUCTURE_TYPE is not "none"'
    when: MASON_TEST_INFRASTRUCTURE_TYPE != "none" and MASON_TEST_HOSTS is not defined

  - fail: msg='OPENSTACK_NETWORK_ID is mandatory when MASON_TEST_INFRASTRUCTURE_TYPE=openstack'
    when: MASON_TEST_INFRASTRUCTURE_TYPE == "openstack" and OPENSTACK_NETWORK_ID is not defined

  - fail: msg='OS_USERNAME is mandatory when MASON_TEST_INFRASTRUCTURE_TYPE=openstack'
    when: MASON_TEST_INFRASTRUCTURE_TYPE == "openstack" and OS_USERNAME is not defined

  - fail: msg='OS_PASSWORD is mandatory when MASON_TEST_INFRASTRUCTURE_TYPE=openstack'
    when: MASON_TEST_INFRASTRUCTURE_TYPE == "openstack" and OS_PASSWORD is not defined

  - fail: msg='OS_TENANT_NAME is mandatory when MASON_TEST_INFRASTRUCTURE_TYPE=openstack'
    when: MASON_TEST_INFRASTRUCTURE_TYPE == "openstack" and OS_TENANT_NAME is not defined

  - fail: msg='OS_AUTH_URL is mandatory when MASON_TEST_INFRASTRUCTURE_TYPE=openstack'
    when: MASON_TEST_INFRASTRUCTURE_TYPE == "openstack" and OS_AUTH_URL is not defined

  # MASON_UPSTREAM_TROVE can also be set. If defined, built artifacts will be
  # uploaded to that Trove.

  # Internal-only variable, used as a way of ensuring the OpenStack
  # configuration is loaded when the 'turbo-hipster' job executor is started.

  - set_fact: TURBO_HIPSTER_COMMAND='/usr/bin/turbo-hipster -c /etc/turbo-hipster-config.yaml'
  - set_fact: TURBO_HIPSTER_COMMAND='/bin/sh -c ". /etc/os.conf && {{TURBO_HIPSTER_COMMAND}"
    when: MASON_TEST_INFRASTRUCTURE_TYPE == "openstack"

  - name: Create required configuration files
    template: src=/usr/share/mason-setup/{{ item }} dest=/etc/{{ item }}
    with_items:
    - zuul/zuul.conf
    - turbo-hipster-config.yaml
    - lighttpd.conf
    - zuul-layout.yaml
    - zuul/zuul-logging.conf

  - name: Create the OpenStack credentials file
    template: src=/usr/share/mason-setup/{{ item }} dest=/etc/{{ item }}
    with_items:
    - os.conf
    when: MASON_TEST_INFRASTRUCTURE_TYPE == "openstack"

  - name: Enable the zuul-server service
    service: name=zuul-server.service enabled=yes
    register: zuul_server_service
  - name: Restart the zuul-server service
    service: name=zuul-server.service state=restarted
    when: zuul_server_service|changed

  - name: Enable the zuul-merger service
    service: name=zuul-merger.service enabled=yes
    register: zuul_merger_service
  - name: Restart the zuul-merger service
    service: name=zuul-merger.service state=restarted
    when: zuul_merger_service|changed

  - name: Enable the turbo-hipster service
    service: name=turbo-hipster.service enabled=yes
    register: turbo_hipster_service
  - name: Restart the turbo-hipster service
    service: name=turbo-hipster.service state=restarted
    when: turbo_hipster_service|changed

  - user: name=www comment="Lighttpd user"

  - name: Enable the lighttpd service
    service: name=lighttpd.service enabled=yes
    register: lighttpd_service
  - name: Restart the lighttpd service
    service: name=lighttpd.service state=restarted
    when: lighttpd_service|changed
