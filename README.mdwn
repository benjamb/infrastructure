Baserock project public infrastructure
======================================

None of these systems are currently Baserock systems, which should be
considered a bug. The need for project infrastructure outweighs the
benefit of using the infrastructure to drive improvements to Baserock,
at the time of writing.

The infrastructure is set up in a way that parallels the preferred Baserock
approach to deployment. All files necessary for (re)deploying the systems
should be contained in this Git repository, with the exception of certain
private tokens (which should be simple to inject at deploy time). Each
service should be provided by a system which services only one function.

I apologise if it's a bit over-complicated! Part of the goal for this work
has been to learn Ansible and Packer, and see how they can be helpful for
Baserock. Feel free to discuss simplifying things which appear overengineered
or needlessly confusing!

Front-end
---------

All of the Baserock project's infrastructure should be behind a single
IP address, with a reverse proxy that forwards the request to the
appropriate machine based on the URL (primarily the subdomain).

The 'frontend' system takes care of this. If you want to add a new
service to the Baserock Project infrastructure you will need to alter
the haproxy.cfg file in the frontend/ directory.

To deploy this system:

    packer build -only=production frontend/packer_template.json

Full HAProxy 1.5 documentation: <https://cbonte.github.io/haproxy-dconv/configuration-1.5.html>.

Database
--------

Baserock uses MariaDB (a fork of MySQL). Storyboard has database migration
files which are tied to this database, so we do not have the choice of using
others at this time.

The Packer build only creates an image with MariaDB installed. To deploy, you
will need to set up and attach a volume and then start the 'mariadb' service.
Also, you must create or have access to an Ansible playbook which will set up
the user accounts. For development deployments you can use the 'develop.sh'
script which sets up all the necessary accounts using dummy passwords.

To deploy a development instance:

    packer build -only=development database/packer_template.json
    database/develop.sh

To deploy this system to production:

    packer build -only=production database/packer_template.json
    nova create \
        --flavor 2 --image 'database-mariadb' \
        --key-name=<your-keypair> database-mariadb
    nova volume-create \
        --display-name database-volume \
        --display-description 'Database volume' \
        10G
    nova volume-attach database-mariadb <volume ID> auto

    nova floating-ip-associate database-mariadb <some floating IP>

    # Set up the volume inside the machine
    ansible <IP> --user=fedora --sudo -m shell \
        -a "mkfs.ext4 /dev/vdb -L database-volume"
    ansible <IP> --user=fedora --sudo -m lineinfile \
        -a "dest=/etc/fstab create=yes line='LABEL=database-volume /var/lib/mysql ext4 defaults 1 2'"

    # FIXME: here we start the service before setting the root password!!!!
    ansible <IP> --user=fedora --sudo -m service \
        -a "name=mariadb enabled=true state=started"

    # edit 'hosts' line of database/user_accounts.yml to point to the server's IP
    ansible-playbook database/user_accounts.yml

    nova floating-ip-disassociate database-mariadb <some floating IP>

OpenID provider
---------------

To deploy a development instance:

    packer build -only=development baserock_openid_provider/packer_template.json
    baserock_openid_provider/develop.sh
    # Now you have a root shell inside your container
    cd /srv/baserock_openid_provider
    python ./manage.py runserver 0.0.0.0:80
    # Now you can browse to http://localhost:80/ and see the server.

To deploy this system to production:

    vim baserock_openid_provider/baserock_openid_provider/settings.py
    # Edit the DATABASES['default']['HOST'] to point to the fixed IP of
    # the 'database' machine.
    packer build -only=production database/packer_template.json
    nova boot openid_provider

    # Now you need to SSH into the system (via the frontend system perhaps)
    # and run the database migrations, before the app will work:
    python /srv/baserock_openid_provider/manage.py migrate


Deployment to DataCentred
-------------------------

The Packer tool requires a floating IP to be available at the time a system is
being deployed to OpenStack. Currently 85.199.252.152 should be used for this.
If you specify a floating IP that is in use by an existing instance, you will
steal it for your own instance and probably break one of our web services.
